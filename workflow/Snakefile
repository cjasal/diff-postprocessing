from pathlib import Path

configfile: "config/config.yaml"

def strip_extensions(filename):
    """helper function to remove all extensions from a file path"""
    filepath = Path(filename)
    prefix = filepath.stem.split(".")[0]
    return filepath.parent / prefix

module tidy_snake:
    snakefile:
        github("MataiMRI/tidySnake", path="workflow/Snakefile", tag="v0.8.0")
    config: config

module diff_processing:
     snakefile:
         github("MataiMRI/diff-processing", "workflow/Snakefile", commit="416da39")
     config: config

use rule * from tidy_snake as tidy_snake_*
use rule * from diff_processing as diff_processing_*

RUNS, TEMPLATES = tidy_snake.list_valid_runs(config['resultsdir'], suffix="_dwi")

BRAIN_MASKS_OUTPUTS = expand(
    f"{config['resultsdir']}/bids/derivatives/mrtrix3"
    "/sub-{subject}/ses-{session}/dwi/sub-{subject}_ses-{session}_{entity}_dwi_brain_mask.nii.gz",
    zip,
    subject=RUNS.subjects,
    session=RUNS.sessions,
    entity=RUNS.entities,
)

HD_BET_OUTPUTS = expand(
    f"{config['resultsdir']}/bids/derivatives/hd_bet"
    "/sub-{subject}/ses-{session}/anat/sub-{subject}_ses-{session}_{entity}_T1w_brain.nii.gz",
    zip,
    subject=RUNS.subjects,
    session=RUNS.sessions,
    entity=RUNS.entities,
)

def eddy_quad_folders(resultsdir):
    """list all EDDY QUAD folders from all subject/session/entities triplet"""
    return expand(
        f"{resultsdir}/bids/derivatives/eddy_quad/sub-{{subject}}_ses-{{session}}_{{entity}}",
        zip,
        subject=RUNS.subjects,
        session=RUNS.sessions,
        entity=RUNS.entities,
    )

EDDY_QC_OUTPUTS = eddy_quad_folders(config['resultsdir'])
if len(RUNS) > 1:  # run SQUAD only if there is more than 1 recording
    EDDY_QC_OUTPUTS.append(f"{config['resultsdir']}/bids/derivatives/eddy_squad")

rule all:
    localrule: True
    default_target: True
    input:
        rules.tidy_snake_all.input,
        BRAIN_MASKS_OUTPUTS,
        HD_BET_OUTPUTS,
        EDDY_QC_OUTPUTS
